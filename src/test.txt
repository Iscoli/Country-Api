
import {createContext,useReducer,useState,useEffect} from 'react'
import axios from 'axios';
import CountryContextReducers from './CountryContextReducers';


  //initialize context
    const CountryContext = createContext()

    








export const CountryContextProvider = ({children})=>{
  const [CountryDAta, setCountryDAta]= useState([])
  const [RegionDAta, setRegionDAta]= useState([])
  const [SearchcountryData, setSearchCountryData] = useState('')
  const [theme, setTheme] = useState(localStorage.getItem('theme') || 'light')
  const [CountryName, setCountryName ] = useState([])
  const [AlphaData, setAlphaData] = useState([])


      // SET COLOR

      const toggleTheme = ()=>{
  
        if(theme === 'light'){
          setTheme('dark')
        }else{
          setTheme('light')
        }
      }
    
    
    
      useEffect(()=>{
        localStorage.setItem('theme', theme)
        document.body.className= theme
      },[theme])




    // All Country 

    useEffect(()=>{
    
      const getCountries = async()=>{
       
        try {
          const {data} = await axios.get('https://restcountries.com/v3.1/all')
          
          setCountryDAta(data)
     }
     catch (error){
       console.log('an eroo occured')
     }
      }
      getCountries()
  
 },[])







    //Regions


  const Regions = async(region)=>{
   
    try {
      const response = await axios.get(`https://restcountries.com/v3.1/region/${region}`)

      setRegionDAta(response.data)
      
 }
 catch (error){
   console.log('an eroo occured')
 }
  }
  






    // Search  filter Users

  
    const SearchCountries=((text)=>{
        setSearchCountryData(text)
    })



  
      
    const initialState ={
      CountryDAta:[],
      RegionDAta:[],
      SearchcountryData:'',
      CountryName:[],
      AlphaData:[],
     
    }
   
    const [state, dispatch]= useReducer(CountryContextReducers,initialState)


   
   
    // countries by name
   
   
     const getCountryName = async(params)=>{
      
       try {
         const {data} = await axios.get(`https://restcountries.com/v3.1/name/${params}`)
         
         console.log(data)
         dispatch({
          type: 'GET-COUNTRY-NAME',
          payload: data,
        })
    }
    catch (error){
      console.log('an eroo occured')


      
    }
    

     }
    






  
       // countries getAlpha Name
   
   
       const getAlphaName = async(code)=>{
      
        try {
          const {data} = await axios.get(`https://restcountries.com/v3.1/alpha/${code}`)
          
          console.log(data)
          setAlphaData(data)
     }
     catch (error){
       console.log('an eroo occured')
     }
      }
    
    










  return <CountryContext.Provider value={{
    Regions,
    SearchCountries,
    toggleTheme,
    getCountryName,
    getAlphaName,
    theme,
    RegionDAta,
    SearchcountryData,
    CountryDAta,
    CountryName,
    AlphaData,
  }}>
      {children}
  </CountryContext.Provider>
}



export default CountryContext


























































                //////////////////////////////////////////////////////////////////////////


  
import {createContext,useState,useEffect} from 'react'
import axios from 'axios';



  //initialize context
const CountryContext = createContext()









export const CountryContextProvider = ({children})=>{
  const [CountryDAta, setCountryDAta]= useState([])
  const [RegionDAta, setRegionDAta]= useState([])
  const [SearchcountryData, setSearchCountryData] = useState('')
  const [theme, setTheme] = useState(localStorage.getItem('theme') || 'light')
  const [CountryName, setCountryName ] = useState([])
  const [AlphaData, setAlphaData] = useState([])


      // SET COLOR

      const toggleTheme = ()=>{
  
        if(theme === 'light'){
          setTheme('dark')
        }else{
          setTheme('light')
        }
      }
    
    
    
      useEffect(()=>{
        localStorage.setItem('theme', theme)
        document.body.className= theme
      },[theme])




    // All Country 

    useEffect(()=>{
    
      const getCountries = async()=>{
       
        try {
          const {data} = await axios.get('https://restcountries.com/v3.1/all')
          
          setCountryDAta(data)
     }
     catch (error){
       console.log('an eroo occured')
     }
      }
      getCountries()
  
 },[])







    //Regions


  const Regions = async(region)=>{
   
    try {
      const response = await axios.get(`https://restcountries.com/v3.1/region/${region}`)

      setRegionDAta(response.data)
      
 }
 catch (error){
   console.log('an eroo occured')
 }
  }
  






    // Search  filter Users

  
    const SearchCountries=((text)=>{
        setSearchCountryData(text)
    })



  
   


   
   
    // countries by name
   
   
     const getCountryName = async(params)=>{
      
       try {
         const {data} = await axios.get(`https://restcountries.com/v3.1/name/${params}`)
         
         console.log(data)
         setCountryName(data)
    }
    catch (error){
      console.log('an eroo occured')
    }
     }
    






  
       // countries by name
   
   
       const getAlphaName = async(code)=>{
      
        try {
          const {data} = await axios.get(`https://restcountries.com/v3.1/alpha/${code}`)
          
          console.log(data)
          setAlphaData(data)
     }
     catch (error){
       console.log('an eroo occured')
     }
      }
    
    










  return <CountryContext.Provider value={{
    Regions,
    SearchCountries,
    toggleTheme,
    getCountryName,
    getAlphaName,
    theme,
    RegionDAta,
    SearchcountryData,
    CountryDAta,
    CountryName,
    AlphaData,
  }}>
      {children}
  </CountryContext.Provider>
}



export default CountryContext